---
import { type CollectionEntry, getCollection } from 'astro:content'
import Layout from '@layouts/Layout.astro'
import Container from '@components/Container.astro'
import BlogCard from '@components/BlogCard.astro'
import {
  Breadcrumb,
  BreadcrumbItem,
  BreadcrumbLink,
  BreadcrumbList,
  BreadcrumbPage,
  BreadcrumbSeparator,
} from '@/components/ui/breadcrumb'
import { HomeIcon } from 'lucide-react'

const data = (await getCollection('blog'))
  .filter((post) => !post.data.draft)
  .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf())

type Acc = {
  [year: string]: CollectionEntry<'blog'>[]
}

const posts = data.reduce((acc: Acc, post) => {
  const year = post.data.date.getFullYear().toString()
  if (!acc[year]) {
    acc[year] = []
  }
  acc[year].push(post)
  return acc
}, {})

const years = Object.keys(posts).sort((a, b) => parseInt(b) - parseInt(a))
---

<Layout title="Blog" description="Blog">
  <Container>
    <Breadcrumb className="mb-6">
      <BreadcrumbList>
        <BreadcrumbItem>
          <BreadcrumbLink href="/"
            ><HomeIcon className="h-4 w-4" /></BreadcrumbLink
          >
        </BreadcrumbItem>
        <BreadcrumbSeparator />
        <BreadcrumbItem>
          <BreadcrumbPage>Blog</BreadcrumbPage>
        </BreadcrumbItem>
      </BreadcrumbList>
    </Breadcrumb>

    <div class="space-y-10">
      <div class="space-y-4">
        {
          years.map((year) => (
            <section class="space-y-4">
              <div class="font-semibold">{year}</div>
              <div>
                <ul class="not-prose flex flex-col gap-4">
                  {posts[year].map((post) => (
                    <li>
                      <BlogCard entry={post} />
                    </li>
                  ))}
                </ul>
              </div>
            </section>
          ))
        }
      </div>
    </div>
  </Container>
</Layout>
