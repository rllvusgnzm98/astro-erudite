---
import Breadcrumbs from '@/components/Breadcrumbs.astro'
import BlogCard from '@components/BlogCard.astro'
import Container from '@components/Container.astro'
import Layout from '@layouts/Layout.astro'
import { type CollectionEntry, getCollection } from 'astro:content'

const data = (await getCollection('blog'))
  .filter((post) => !post.data.draft)
  .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf())

type Acc = {
  [year: string]: CollectionEntry<'blog'>[]
}

const posts = data.reduce((acc: Acc, post) => {
  const year = post.data.date.getFullYear().toString()
  if (!acc[year]) {
    acc[year] = []
  }
  acc[year].push(post)
  return acc
}, {})

const years = Object.keys(posts).sort((a, b) => parseInt(b) - parseInt(a))
---

<Layout title="Blog" description="Blog">
  <Container class="flex flex-col gap-y-6">
    <Breadcrumbs items={[{ label: 'Blog' }]} />

    <div class="flex flex-col gap-y-8">
      {
        years.map((year) => (
          <section class="flex flex-col gap-y-4">
            <div class="font-semibold">{year}</div>
            <div>
              <ul class="not-prose flex flex-col gap-4">
                {posts[year].map((post) => (
                  <li>
                    <BlogCard entry={post} />
                  </li>
                ))}
              </ul>
            </div>
          </section>
        ))
      }
    </div>
  </Container>
</Layout>
