---
import '../styles/global.css'

import '@fontsource/geist-sans'
import '@fontsource/geist-mono'

interface Props {
  title: string
  description: string
  image?: string
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site)

const { title, description, image = '/blog-placeholder-1.jpg' } = Astro.props
---

<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<meta name="generator" content={Astro.generator} />

<link rel="canonical" href={canonicalURL} />

<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={new URL(image, Astro.url)} />

<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={new URL(image, Astro.url)} />

<script is:inline>
  function init() {
    onScroll()
    addCopyCodeButtons()

    const backToTop = document.getElementById('back-to-top')
    backToTop?.addEventListener('click', (event) => scrollToTop(event))

    const backToPrev = document.getElementById('back-to-prev')
    backToPrev?.addEventListener('click', () => window.history.back())

    document.addEventListener('scroll', onScroll)
  }

  function onScroll() {
    if (window.scrollY > 0) {
      document.documentElement.classList.add('scrolled')
    } else {
      document.documentElement.classList.remove('scrolled')
    }
  }

  function scrollToTop(event) {
    event.preventDefault()
    window.scrollTo({
      top: 0,
      behavior: 'smooth',
    })
  }

  function addCopyCodeButtons() {
    let copyButtonLabel = 'ðŸ“‹'
    let codeBlocks = Array.from(document.querySelectorAll('pre'))

    async function copyCode(codeBlock, copyButton) {
      const codeText = codeBlock.innerText
      const buttonText = copyButton.innerText
      const textToCopy = codeText.replace(buttonText, '')

      await navigator.clipboard.writeText(textToCopy)
      copyButton.innerText = 'âœ…'

      setTimeout(() => {
        copyButton.innerText = copyButtonLabel
      }, 2000)
    }

    for (let codeBlock of codeBlocks) {
      const wrapper = document.createElement('div')
      wrapper.style.position = 'relative'

      const copyButton = document.createElement('button')
      copyButton.innerText = copyButtonLabel
      copyButton.classList = 'copy-code'

      codeBlock.setAttribute('tabindex', '0')
      codeBlock.appendChild(copyButton)

      codeBlock.parentNode.insertBefore(wrapper, codeBlock)
      wrapper.appendChild(codeBlock)

      copyButton?.addEventListener('click', async () => {
        await copyCode(codeBlock, copyButton)
      })
    }
  }

  document.addEventListener('DOMContentLoaded', () => init())
  document.addEventListener('astro:after-swap', () => init())
</script>
