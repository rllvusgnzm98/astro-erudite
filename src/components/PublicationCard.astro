---
import type { CollectionEntry } from 'astro:content'
import { Image } from 'astro:assets'
import { HIGHLIGHTAUTHOR } from '@consts'

type Props = {
  entry: CollectionEntry<'publications'>
}

const { entry } = Astro.props as {
  entry: CollectionEntry<'publications'>
}

const splitStr = (authors: string | undefined, targetAuthor: string) => {
  if (!authors) return []
  const parts = authors.split(new RegExp(`(${targetAuthor})`, 'g'))
  return parts
}
const decomposeURL = (URL: string | undefined) => {
  if (!URL) return { text: '', url: '' }
  const parts = URL.split(': ')
  return { text: parts[0], url: parts[1] }
}

const dataLink = decomposeURL(entry.data.dataURL)
const paperLink = decomposeURL(entry.data.paperURL)
const codeLink = decomposeURL(entry.data.codeURL)
const webLink = decomposeURL(entry.data.webURL)
const authorsParts = splitStr(entry.data.authors, HIGHLIGHTAUTHOR)
---

<div
  class="not-prose grid-cols-auto group relative grid w-full items-center gap-4 rounded-lg border border-black/15 px-4 py-3 transition-colors duration-300 ease-in-out hover:bg-black/5 hover:text-black focus-visible:bg-black/5 focus-visible:text-black dark:border-white/20 dark:hover:bg-white/5 dark:hover:text-white dark:focus-visible:bg-white/5 dark:focus-visible:text-white md:grid-cols-[204px_auto]"
>
  <Image
    src={entry.data.img ?? ''}
    alt={entry.data.imgAlt ?? ''}
    width={640}
    height={480}
    class="hidden rounded-md shadow-sm transition hover:opacity-80 sm:mr-6 sm:h-[135px] sm:w-[240px] md:flex"
    loading="eager"
  />

  <div class="flex h-full items-center">
    <div class="flex flex-col">
      <div class="w-full">
        <div class="text-md w-full font-semibold">
          {entry.data.title}
        </div>
        <div class="w-full text-sm">
          {
            authorsParts.map((part: any) =>
              part === HIGHLIGHTAUTHOR ? (
                <u>
                  <strong>{part}</strong>
                </u>
              ) : (
                part
              ),
            )
          }
        </div>
        <div class="w-full text-sm">
          {
            paperLink.url != '' && (
              <a
                class="text-orange-500 underline transition-colors duration-300 ease-in-out visited:text-indigo-400 hover:text-cyan-500 dark:hover:text-cyan-500"
                target="_blank"
                href={paperLink.url}
              >
                {paperLink.text}
              </a>
            )
          }
          {
            codeLink.url != '' && (
              <a
                class="text-orange-500 underline transition-colors duration-300 ease-in-out visited:text-indigo-400 hover:text-cyan-500 dark:hover:text-cyan-500"
                target="_blank"
                href={codeLink.url}
              >
                {codeLink.text}
              </a>
            )
          }
          {
            webLink.url != '' && (
              <a
                class="text-orange-500 underline transition-colors duration-300 ease-in-out visited:text-indigo-400 hover:text-cyan-500 dark:hover:text-cyan-500"
                target="_blank"
                href={webLink.url}
              >
                {webLink.text}
              </a>
            )
          }
          {
            dataLink.url != '' && (
              <a
                class="text-orange-500 underline transition-colors duration-300 ease-in-out visited:text-indigo-400 hover:text-cyan-500 dark:hover:text-cyan-500"
                target="_blank"
                href={dataLink.url}
              >
                {dataLink.text}
              </a>
            )
          }
        </div>
        <div class="text-sm">
          In <div class="inline italic">{entry.data.pub}</div>
        </div>
      </div>
      <p class="mt-2 break-words text-sm">
        {entry.data.description}
      </p>
    </div>
  </div>
</div>
